<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CuestionAlumnoRespuesta', 'doctrine');

/**
 * BaseCuestionAlumnoRespuesta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $cuestion_id
 * @property integer $respuesta_id
 * @property integer $alumno_id
 * @property timestamp $fecha
 * @property Respuesta $Respuesta
 * @property Cuestion $Cuestion
 * @property Alumno $Alumno
 * 
 * @method integer                 getId()           Returns the current record's "id" value
 * @method integer                 getCuestionId()   Returns the current record's "cuestion_id" value
 * @method integer                 getRespuestaId()  Returns the current record's "respuesta_id" value
 * @method integer                 getAlumnoId()     Returns the current record's "alumno_id" value
 * @method timestamp               getFecha()        Returns the current record's "fecha" value
 * @method Respuesta               getRespuesta()    Returns the current record's "Respuesta" value
 * @method Cuestion                getCuestion()     Returns the current record's "Cuestion" value
 * @method Alumno                  getAlumno()       Returns the current record's "Alumno" value
 * @method CuestionAlumnoRespuesta setId()           Sets the current record's "id" value
 * @method CuestionAlumnoRespuesta setCuestionId()   Sets the current record's "cuestion_id" value
 * @method CuestionAlumnoRespuesta setRespuestaId()  Sets the current record's "respuesta_id" value
 * @method CuestionAlumnoRespuesta setAlumnoId()     Sets the current record's "alumno_id" value
 * @method CuestionAlumnoRespuesta setFecha()        Sets the current record's "fecha" value
 * @method CuestionAlumnoRespuesta setRespuesta()    Sets the current record's "Respuesta" value
 * @method CuestionAlumnoRespuesta setCuestion()     Sets the current record's "Cuestion" value
 * @method CuestionAlumnoRespuesta setAlumno()       Sets the current record's "Alumno" value
 * 
 * @package    themario
 * @subpackage model
 * @author     Alejandro Lorente. eidansoft ARROBA gmail PUNTO com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCuestionAlumnoRespuesta extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cuestionAlumnoRespuesta');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('cuestion_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('respuesta_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('alumno_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fecha', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Respuesta', array(
             'local' => 'respuesta_id',
             'foreign' => 'id'));

        $this->hasOne('Cuestion', array(
             'local' => 'cuestion_id',
             'foreign' => 'id'));

        $this->hasOne('Alumno', array(
             'local' => 'alumno_id',
             'foreign' => 'id'));
    }
}